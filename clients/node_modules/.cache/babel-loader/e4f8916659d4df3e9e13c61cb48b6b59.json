{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuyi\\\\OneDrive\\\\Desktop\\\\Web-Development\\\\React\\\\Udemy\\\\streams\\\\clients\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this);\n    } // react-router-dom automatically add many props to StreamEdit element when it gets rendered\n    // match props contains info about url\n    // can access the stream id inside match props with its params property\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"StreamEdit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n} // state is the redux state, ownProps is the props of the current component\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/shuyi/OneDrive/Desktop/Web-Development/React/Udemy/streams/clients/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","Component","componentDidMount","props","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHM,CAIP;AACA;AACA;;;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAZsC,C,CAezC;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLH,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADH,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    if(!this.props.stream){\r\n      return <div>Loading...</div>\r\n    }\r\n    // react-router-dom automatically add many props to StreamEdit element when it gets rendered\r\n    // match props contains info about url\r\n    // can access the stream id inside match props with its params property\r\n    return <div>StreamEdit</div>;\r\n  }\r\n}\r\n\r\n// state is the redux state, ownProps is the props of the current component\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    stream: state.streams[ownProps.match.params.id],\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\r\n"]},"metadata":{},"sourceType":"module"}