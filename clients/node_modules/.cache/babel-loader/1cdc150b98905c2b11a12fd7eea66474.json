{"ast":null,"code":"import { FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, CREATE_STREAM } from \"../actions/types\";\nimport _ from \"lodash\";\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      //action.payload is a list of streams fetched from API\n      //use _.mapKey() to make the list to an object with the key of 'id' for each element\n      // ... : take all the key value pairs from that newly created object to the state object\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case FETCH_STREAM:\n      //action.payload is a whole stream object\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      // _.omit will return a new array\n      //action.payload of DELETE_STREAM is just an id\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/shuyi/OneDrive/Desktop/Web-Development/React/Udemy/streams/clients/src/reducers/streamReducer.js"],"names":["FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","CREATE_STREAM","_","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,YAAvB,EAAqCC,aAArC,EAAoDC,WAApD,EAAiEC,aAAjE,QAAqF,kBAArF;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,gBAAe,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,aAAL;AACI;AACA;AACA;AACA,aAAO,EAAC,GAAGM,KAAJ;AAAW,WAAGD,CAAC,CAACI,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAd,OAAP;;AACJ,SAAKT,YAAL;AACI;AACA,aAAO,EAAC,GAAGK,KAAJ;AAAW,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAvC,OAAP;;AACJ,SAAKN,aAAL;AACI,aAAO,EAAC,GAAGE,KAAJ;AAAW,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAvC,OAAP;;AACJ,SAAKP,WAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAW,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAvC,OAAP;;AACJ,SAAKR,aAAL;AACI;AACA;AACA,aAAOG,CAAC,CAACO,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACJ;AACI,aAAOJ,KAAP;AAlBR;AAoBH,CArBD","sourcesContent":["import {FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, CREATE_STREAM} from \"../actions/types\"\r\nimport _ from \"lodash\";\r\nexport default (state={}, action) => {\r\n    switch(action.type){\r\n        case FETCH_STREAMS:\r\n            //action.payload is a list of streams fetched from API\r\n            //use _.mapKey() to make the list to an object with the key of 'id' for each element\r\n            // ... : take all the key value pairs from that newly created object to the state object\r\n            return {...state, ..._.mapKeys(action.payload, 'id')}\r\n        case FETCH_STREAM:\r\n            //action.payload is a whole stream object\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case CREATE_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case EDIT_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case DELETE_STREAM:\r\n            // _.omit will return a new array\r\n            //action.payload of DELETE_STREAM is just an id\r\n            return _.omit(state, action.payload);\r\n        default: \r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}