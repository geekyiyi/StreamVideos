{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuyi\\\\OneDrive\\\\Desktop\\\\Web-Development\\\\React\\\\Udemy\\\\streams\\\\clients\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  } //Whether or not show the admin button(delete/edit) if the stream belong to current logged user\n\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //streams inside state is an object with different streams\n  // Object.values() turns all values inside that object into an array\n  // so now this.props.streams will be an array\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:/Users/shuyi/OneDrive/Desktop/Web-Development/React/Udemy/streams/clients/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","title","description","id","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD,GAHsC,CAKvC;;;AACAK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAhC,EAA8C;AAC5C,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AACDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAwBL,MAAD,IAAY;AACxC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACGA,MAAM,CAACM,KADV,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BN,MAAM,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAA2BP,MAAM,CAACQ,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXM,CAAP;AAYD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKN,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AArCsC;;AAwCzC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA;AACA;AACA,SAAO;AACLP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADJ;AAELF,IAAAA,aAAa,EAAES,KAAK,CAACG,IAAN,CAAWb;AAFrB,GAAP;AAID,CARD;;AAUA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams();\r\n  }\r\n  \r\n  //Whether or not show the admin button(delete/edit) if the stream belong to current logged user\r\n  renderAdmin(stream) {\r\n    if(stream.userId === this.props.currentUserId){\r\n      return (\r\n        <div className=\"right floated content\">\r\n          <button className=\"ui button primary\">Edit</button>\r\n          <button className=\"ui button negative\">Delete</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  renderList() {\r\n    return this.props.streams.map((stream) => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n        \r\n          <i className=\"large middle aligned icon camera\" />\r\n          <div className=\"content\">\r\n            {stream.title}\r\n            <div className=\"description\">{stream.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Streams</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //streams inside state is an object with different streams\r\n  // Object.values() turns all values inside that object into an array\r\n  // so now this.props.streams will be an array\r\n  return {\r\n    streams: Object.values(state.streams),\r\n    currentUserId: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}